{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","contentType","headers","get","indexOf","json","users","text","console","log","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yUAEaA,EAAO,SAAAC,GAAK,OACvB,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,6BACHC,IAAI,YAEN,6BAAKL,EAAMG,QAAQG,OACnB,4BAAIN,EAAMG,QAAQI,YCLTC,EAAW,SAAAR,GACtB,OACE,qBAAKC,UAAU,YAAf,SACGD,EAAMS,SAASC,KAAI,SAAAP,GAAO,OACzB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCKZO,G,MAVG,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aAChC,OACE,uBACEZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCgDDG,E,kDAnDb,aAAe,IAAD,8BACZ,gBA2BFH,aAAe,SAAAI,GACb,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SA3BtC,EAAKC,MAAQ,CACXb,SAAU,GACVU,YAAa,IAJH,E,qDAad,WAAqB,IAAD,OAClBI,MAAM,8CAA8CC,MAAK,SAAAC,GACvD,IAAMC,EAAcD,EAASE,QAAQC,IAAI,gBACzC,OAAIF,IAA4D,IAA7CA,EAAYG,QAAQ,oBAC9BJ,EACJK,OACAN,MAAK,SAAAO,GAAK,OAAI,EAAKb,SAAS,CAAET,SAAUsB,OAEpCN,EAASO,OAAOR,MAAK,SAAAQ,GAC1BC,QAAQC,IAAIF,W,oBAUpB,WAAU,IAAD,EAC2BG,KAAKb,MAA/Bb,EADD,EACCA,SAAUU,EADX,EACWA,YACZiB,EAAmB3B,EAAS4B,QAAO,SAAAlC,GAAO,OAC9CA,EAAQG,KAAKgC,cAAcC,SAASpB,EAAYmB,kBAElD,OACE,sBAAKrC,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACEW,YAAY,kBACZC,aAAcsB,KAAKtB,eAGrB,cAAC,EAAD,CAAUJ,SAAU2B,W,GA9CVI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnB,MAAK,YAAkD,IAA/CoB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e2aaaad1.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./card.style.css\";\nexport const Card = props => (\n  <div className=\"card-container\">\n    <img\n      src={`https://robohash.org/${props.monster.id}ffa?set=set2&size=180x180`}\n      alt=\"Monster\"\n    />\n    <h2>{props.monster.name}</h2>\n    <p>{props.monster.email}</p>\n  </div>\n);\n","import React from \"react\";\nimport \"./card-list.style.css\";\nimport { Card } from \"./../card/card.component\";\n\nexport const CardList = props => {\n  return (\n    <div className=\"card-list\">\n      {props.monsters.map(monster => (\n        <Card key={monster.id} monster={monster} />\n      ))}\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./search-box.style.css\";\n\nconst SearchBox = ({ placeholder, handleChange }) => {\n  return (\n    <input\n      className=\"search\"\n      type=\"search\"\n      placeholder={placeholder}\n      onChange={handleChange}\n    />\n  );\n};\nexport default SearchBox;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { CardList } from \"./components/card-list/card-list.component\";\nimport SearchBox from \"./components/search-box/search-box.component\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: \"\",\n    };\n  }\n\n  // componentDidMount() {\n  //   fetch(\"https://jsonplaceholder.typicode.com/users\")\n  //     .then(response => response.json())\n  //     .then(users => this.setState({ monsters: users }));\n  // }\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\").then(response => {\n      const contentType = response.headers.get(\"content-type\");\n      if (contentType && contentType.indexOf(\"application/json\") !== -1) {\n        return response\n          .json()\n          .then(users => this.setState({ monsters: users }));\n      } else {\n        return response.text().then(text => {\n          console.log(text);\n        });\n      }\n    });\n  }\n\n  handleChange = e => {\n    this.setState({ searchField: e.target.value });\n  };\n\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter(monster =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox\n          placeholder=\"Search Monsters\"\n          handleChange={this.handleChange}\n        />\n\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}